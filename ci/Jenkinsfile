#!/usr/bin/env groovy

def err = null

node {
    // Creamos el try catch para obtener el error si sucede
    try{
     stage('checkout'){
        checkout(
        [$class: 'GitSCM', 
        branches: [[name: '*/main']], 
        extensions: [], 
        userRemoteConfigs: [[credentialsId: 'github_token',
        url: 'https://github.com/sebastian2296/devops-project.git']]])
        sh 'ls'
        }

    dir('iac/terraform/networking'){
     stage('terraform init'){
        withCredentials([[
        $class: 'AmazonWebServicesCredentialsBinding',
        credentialsId: "AWS-terraform",
        accessKeyVariable: 'AWS_ACCESS_KEY_ID',
        secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']])  {
        sh "terraform init -reconfigure -backend-config=backend.conf"
    }

    }
    }
    } catch(caughtError) {
        err = caughtError
        currentBuild.result = 'FAILURE'
    } finally {
        stage('Clean') {
            cleanWs()
        }
        if(err) {
            throw err
        }
    }
}